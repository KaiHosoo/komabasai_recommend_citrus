# ✅ 推しみかん診断（Streamlit 完全修正版）
# ----------------------------------------------------------
# app.py（このまま保存してOK）
# ----------------------------------------------------------

import streamlit as st
import altair as alt
from collections import defaultdict

# ----------------------------------------------------------
# ページ設定
# ----------------------------------------------------------
st.set_page_config(page_title="推しみかん診断", page_icon="🍊", layout="centered")

# ----------------------------------------------------------
# 質問データ
# ----------------------------------------------------------
QUESTIONS = [
    {
        "id": "Q1",
        "q": "みかんを食べる時、甘さと酸味のどちらを重視しますか？",
        "options": {
            "とにかく甘いのが好き": {"せとか": 2, "甘平": 2},
            "甘さと酸味のバランスが大事": {"温州みかん": 2, "ブラッドオレンジ": 2, "不知火": 2},
            "酸味強めが好き": {"甘夏": 2},
        },
    },
    {
        "id": "Q2",
        "q": "みかんを食べるシーンといえば？",
        "options": {
            "のんびりおやつに！": {"温州みかん": 2, "不知火": 2},
            "勉強や仕事の合間のリフレッシュ！": {"甘夏": 2, "ブラッドオレンジ": 2},
            "食後のデザートに！": {"せとか": 2, "甘平": 2},
        },
    },
    {
        "id": "Q3",
        "q": "みかんを食べるときに大事なことは？",
        "options": {
            "皮がむきやすいこと": {"温州みかん": 2, "不知火": 2},
            "香りや風味が良いこと": {"甘夏": 2, "ブラッドオレンジ": 2},
            "種がないこと": {"せとか": 2, "甘平": 2},
        },
    },
    {
        "id": "Q4",
        "q": "みかんの見た目で惹かれるのは？",
        "options": {
            "小ぶりでかわいいサイズ感": {"温州みかん": 2},
            "ふっくら丸くて存在感のあるもの": {"不知火": 2, "甘夏": 2, "ブラッドオレンジ": 2},
            "濃い色で『美味しそう！』と思えるもの": {"せとか": 2, "甘平": 2},
        },
    },
    {
        "id": "Q5",
        "q": "柑橘の食べ方は？",
        "options": {
            "そのままが一番！": {"温州みかん": 2, "甘平": 2},
            "柑橘スイーツ大好き！": {"不知火": 2, "せとか": 2},
            "料理に入れてみたい！": {"甘夏": 2, "ブラッドオレンジ": 2},
        },
    },
    {
        "id": "Q6",
        "q": "あなたが求める人生は？",
        "options": {
            "刺激のある人生": {"せとか": 1, "甘平": 1, "ブラッドオレンジ": 1},
            "安定な人生": {"温州みかん": 1, "不知火": 1, "甘夏": 1},
        },
    },
    {
        "id": "Q7",
        "q": "好きな季節は？",
        "options": {
            "春": {"甘平": 1, "ブラッドオレンジ": 1},
            "夏": {"甘夏": 1},
            "秋": {"温州みかん": 1},
            "冬": {"不知火": 1, "せとか": 1},
        },
    },
    {
        "id": "Q8",
        "q": "誕生日にもらって嬉しいのは？",
        "options": {
            "高級なもの": {"せとか": 1, "甘平": 1},
            "ユニークなもの": {"甘夏": 1, "ブラッドオレンジ": 1},
            "実用的なもの": {"温州みかん": 1, "不知火": 1},
        },
    },
    {
        "id": "Q9",
        "q": "好きなタイプは？",
        "options": {
            "あまあま": {"温州みかん": 1, "せとか": 1, "甘平": 1},
            "ツンデレ": {"不知火": 1, "甘夏": 1, "ブラッドオレンジ": 1},
        },
    },
    {
        "id": "Q10",
        "q": "好きな空は？",
        "options": {
            "青空": {"不知火": 1, "甘夏": 1},
            "夕焼け": {"温州みかん": 1, "せとか": 1},
            "星空": {"甘平": 1, "ブラッドオレンジ": 1},
        },
    },
    {
        "id": "Q11",
        "q": "新しい友達グループに入るとき、あなたはどうする？",
        "options": {
            "まずは様子を見て、少しずつ輪に入る": {"不知火": 1, "甘夏": 1},
            "自分から話しかけて、場を盛り上げる": {"温州みかん": 1, "せとか": 1},
            "特定の1人とじっくり仲良くなる": {"甘平": 1, "ブラッドオレンジ": 1},
        },
    },
    {
        "id": "Q12",
        "q": "目の前にお菓子がたくさんあります。持って帰るなら？",
        "options": {
            "大きなお菓子を1個": {"甘夏": 1, "不知火": 1},
            "中くらいのお菓子を3個": {"せとか": 1, "甘平": 1, "ブラッドオレンジ": 1},
            "小さなお菓子を5個": {"温州みかん": 1},
        },
    },
]

VARIETIES = ["温州みかん", "不知火", "せとか", "甘平", "甘夏", "ブラッドオレンジ"]

# 結果表示用 ローカルPDF
VARIETY_IMG = {
    "温州みかん": "citrus_images/推しみかん診断_page_温州みかん.pdf",
    "不知火": "citrus_images/推しみかん診断_page_不知火.pdf",
    "せとか": "citrus_images/推しみかん診断_page_せとか.pdf",
    "甘平": "citrus_images/推しみかん診断_page_甘平.pdf",
    "甘夏": "citrus_images/推しみかん診断_page_甘夏.pdf",
    "ブラッドオレンジ": "citrus_images/推しみかん診断_page_ブラッドオレンジ.pdf",
}

# ----------------------------------------------------------
# ユーティリティ
# ----------------------------------------------------------
def init_state():
    if "step" not in st.session_state:
        st.session_state.step = 0
    if "answers" not in st.session_state:
        st.session_state.answers = {}
    if "finished" not in st.session_state:
        st.session_state.finished = False
    if "started" not in st.session_state:
        st.session_state.started = False

def reset_all():
    st.session_state.clear()
    init_state()


def compute_scores(answers_dict):
    scores = defaultdict(int)
    hi = defaultdict(int)
    lo = defaultdict

